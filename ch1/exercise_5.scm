;; Ben Bitdiddle 发明了一种检测方法, 能够确定解释器究竟采用哪种序求值, 是采用应用序, 还是采用正则序.
;; 他定义了下面两个过程

(define p
  (lambda ()
    (p)))

(define test
  (lambda (x y)
    (if (= x 0)
	0
	y)))

;; 而后他求值下面的表达式

(test 0 (p))

;; 如果某个解释器采用的是应用序求值, Ben 会看到什么样的情况?
;; 如果解释器采用正则序求值, 他又会看到什么情况?

;; --------------------------------------------------------------------------------------------------

;; 如果解释器是应用序求值
;; 会分别求值 test, 0, (p)
;; 在求值(p)时, 无法停机


;; 如果解释器是正则序求值
;; 会求值 test, 得到一个(lambda ...)
;; 代入0, (p)
;; 求值(if ...)
;; 返回0
