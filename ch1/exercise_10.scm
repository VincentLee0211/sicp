;; 下面计算过程一个称为 Ackermann 函数的数学函数:

(define A
  (lambda (x y)
    (cond ((= y 0) 0)
	  ((= x 0) (* 2 y))
	  ((= y 1) 2)
	  (else (A (- x 1)
		   (A x (- y 1)))))))

;; 下面哥表达式的值是什么

(A 1 10)
;; 1024         (A 1 n) = 2 ^ n

;; (A 1 0) = 0
;; (A 1 1) = 2
;; (A 1 2) = (A 0 (A 1 1)) = (A 0 2) = 2 * 2 = 4
;; (A 1 3) = (A 0 (A 1 2)) = (A 0 4) = 2 * 4 = 8
;; ...
;; (A 1 n) = (A 0 (A 1 (- n 1))) = ... = 2 ^ n

(A 2 4)
;; 65536        (A 2 n) = 2 ^ 2 ^ 2 ... ^ 2 (n 个)

;; (A 2 0) = 0
;; (A 2 1) = 2
;; (A 2 2) = (A 1 (A 2 1)) = (A 1 2) = 4
;; (A 2 3) = (A 1 (A 2 2)) = (A 1 4) = 2 ^ 4 = 8
;; ...
;; (A 2 n) = (A 1 (A 2 (- n 1))) = ... = 2 ^ 2 ... ^ 2

(A 3 3)
;; 65536

;; (A 3 0) = 0
;; (A 3 1) = 2
;; (A 3 2) = (A 2 (A 3 1)) = (A 2 2) = 2 ^ 2
;; (A 3 3) = (A 2 (A 3 2)) = (A 2 4) = 2 ^ 2 ^ 2 ^ 2
;; ...

;; 请考虑下面的过程, 其中的 A 就是上面定义的过程
;; 请给出过程 f g h 对给定整数值 n 所计算的函数的数学定义
(define f (lambda (n) (A 0 n)))
;; 2 * n

(define g (lambda (n) (A 1 n)))
;; 2 ^ n

(define h (lambda (n) (A 2 n)))
;; 2 ^ 2 ... ^ 2

(define k (lambda (n) (* 5 n n)))
;; 5 * n ^ 2
